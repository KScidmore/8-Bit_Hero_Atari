-------------------------------------------------------------------------------
FROM LAB6.C FILE

int main()
{
    SCANCODE scancode;
    char *scancode_2_ascii = (char *)((Keytbl(-1, -1, -1))->unshift);
    char ch;
    long orig_ssp;

    orig_ssp = Super(0);                    /* enter supervisor mode */
    *IKBD_control = RX_DISABLE;             /* disable Rx interrupts */

    while (1)
    {
        scancode = read_scancode();
        if (scancode == ESC_MAKE){
            break;
        } 
        else if (!(scancode & MAKE_MASK)) { /* check high order bit */
            ch = scancode_2_ascii[scancode];
            (void)Cconout(ch);
        }
    }

    *IKBD_control = RX_ENABLE;              /* enable Rx interrupts */
    Super(orig_ssp);                        /* leave supervisor mode */

    return 0;
}

END OF LAB6.C CODE
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
KEEPING HERE IN CASE IT ENDS UP BEING USEFUL 

void do_vbl_isr() {
    static UINT32 vbl_counter = 0;
    static UINT32 measure_counter = 0;
    static UINT32 w_beat_counter = 0;
    static UINT32 h_beat_counter = 0;
    static UINT32 q_beat_counter = 0;

    vbl_counter += 1;

    /*-------- measures ------------------------*/
    if (measure_counter == 210) 
    {
        measures += 1;
        measure_counter = 0;
    }

    /*-------- whole beats ---------------------*/
    if (w_beat_counter == 52 || w_beat_counter == 105 || w_beat_counter == 157) 
    {
        w_beats += 1;
    }
    else if (w_beat_counter == 210) {
        w_beats = 1;
        w_beat_counter = 0;
    }

    /*-------- half beats ----------------------*/
    if (h_beat_counter == 26 || h_beat_counter == 52 || h_beat_counter == 78 || 
        h_beat_counter == 105 || h_beat_counter == 131 || h_beat_counter == 157 || 
        h_beat_counter == 183) 
    {
        h_beats += 1;
    }
    else if (h_beat_counter == 210) {
        h_beats = 1;
        h_beat_counter = 0;
    }


    /*-------- quarter beats -------------------*/
    if (q_beat_counter == 13 || q_beat_counter == 26 || q_beat_counter == 39 || 
        q_beat_counter == 52 || q_beat_counter == 65 || q_beat_counter == 78 || 
        q_beat_counter == 91 || q_beat_counter == 105 || q_beat_counter == 118 || 
        q_beat_counter == 131 || q_beat_counter == 144 || q_beat_counter == 157 || 
        q_beat_counter == 170 || q_beat_counter == 183 || q_beat_counter == 196 )
    {
        q_beats += 1;
    }
    else if (q_beat_counter == 210) {
        q_beats = 1;
        q_beat_counter = 0;
    }

}


-------------------


    /*
    start_music();
    */
    
    /*
    while (measures <= 4) {
        //prints past 4 w/o second if condition
        if ((w_beats != old_w_beats || h_beats != old_h_beats ||
            q_beats != old_q_beats) && measures <= 4) {
            printf("Measure:\t\t%u\n", measures);
            printf("Whole Beats:\t%u\n", w_beats);
            printf("Half Beats:\t\t%u\n", h_beats);
            printf("Quarter Beats:\t%u\n\n", q_beats);
            old_w_beats = w_beats;
            old_h_beats = h_beats;
            old_q_beats = q_beats;
        }
    }
    */

-------------------------------------------------------------------------------

DOCUMENTATION DRAFTING 
max 75 ch to fit in bounds 

/*---------- FUNCTION: do_vbl_isr -------------------------
/  PURPOSE:
/    TODO
/  
/  CALLER INPUT:
/    N/A
/  
/  CALLER OUTPUT:
/    N/A
/  
/  ASSUMPTIONS, LIMITATIONS, AND KNOWN BUGS:
/    TODO 
/--------------------------------------------------------*/
This is a custom Vertical Blank Interrupt Service Routine